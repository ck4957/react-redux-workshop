section
  h1 React Redux

section
  h2 React Redux
  ul
    li Used to making binding React components to Redux a little easier

section
  h2 Component types
  ul
    li Presentational (dumb) components vs. container (smart) components
    li Avoid using component state or React lifecycle methods if possible

section
  h3 Presentational components
  ul
    li.fragment Neither know nor care about Redux
    li.fragment Get data from props
    li.fragment.
      Can be implemented as <span class="component red">functional stateless components</span>

section
  h4 Example functional stateless component
  script(type="text/plain", class="language-jsx", style="width: 100%; max-height: 700px;").
    import React from 'react';
    import PropTypes from 'prop-types';

    const AgentDetails = props => {
      return (
        <li onClick={onClick}>
          {agent.name} - {agent.title}
        </li>
      );
    }

    AgentDetails.propTypes = {
      onClick: PropTypes.func.isRequired,
      agent: PropTypes.shape({
        name: PropTypes.string.isRequired,
        title: PropTypes.string.isRequired,
      })
    };

    export default AgentDetails;

section
  h3 Container components
  p Act as a bridge between React and Redux
  ul
    li Map data from state onto props
    li Dispatch actions and update the store
    li.
      Uses React Redux <span class="component red">connect()</span> function

section
  h3 Connect function
  ul
    li.
      <span class="component red">connect(<br/>[mapStateToProps],<br />[mapDispatchToProps],<br />[mergeProps],<br />[options]<br />)</span>
    li.
      <span class="component red">mapStateToProps</span> and <span class="component red">mapDispatchToProps</span> are the most commonly used parameters

section
  h3 mapStateToProps(state, [ownProps])
  p Maps values from Redux state onto the component's props
  ul
    li Must be a function
    li Subscribes the component to store updates
    li.
      If <span class="component red">ownProps</span> is defined, will contain all props passed to this component

section
  h3 mapDispatchToProps(dispatch, [ownProps])
  ul
    li Can be an object or a function
    li.
      Object: each object key is considered an action creator and binds to <span class="component red">store.dispatch</span>
    li.
      Function: is given the <span class="component red">dispatch</span> function directly
    li.
      If <span class="component red">ownProps</span> is defined, will contain all props passed to this component

section
  h3 Example presentation component
  script(type="text/plain", class="language-jsx", style="width: 100%; max-height: 700px;").
    import React, {Component} from 'react'
    import PropTypes from 'prop-types'
    import AgentDetails from '../components/AgentDetails'

    class AgentList extends Component {
      render() {
        return (
          <ul>{this.props.agents.map(
          agent => (<AgentDetails agent={agent} onClick={this.props.onAgentClick}/>))}</ul>
        )
      }
    }

    AgentList.propTypes = {
      agents: PropTypes.array.isRequired
    }

    export default AgentList

section
  h3 Container wraps presentation component with connect()
  script(type="text/plain", class="language-jsx", style="width: 100%; max-height: 700px;").
    import {connect} from 'react-redux'
    import {onAgentClick} from '../actions/agentActions'
    import AgentList from '../components/AgentList'

    const mapStateToProps = (state) => {
      return {
        agents: state.agents
      }
    }

    const mapDispatchToProps = {
      onAgentClick
    }

    const ConnectedAgentList = connect(mapStateToProps, mapDispatchToProps)(AgentList)

    export default ConnectedAgentList

section
  h3 Presentational vs. container components
  table(style={'font-size': '75%'})
    thead
      tr
        td
        td
          h4 Presentational
        td
          h4 Container
    tbody
      tr
        td Purpose
        td How things look (markup, styles)
        td How things work (data fetching, state updates)
      tr
        td Aware of Redux
        td No
        td Yes
      tr
        td Reads data from
        td props
        td Redux state subscription
      tr
        td Change data by
        td Invoking callbacks from props
        td Dispatching Redux actions
      tr
        td Are written
        td By hand
        td.
          Generated by React Redux via <span class="component red">connect()</span>

section
  h1
    a(href="/labs/integrating-redux") Lab 04
  h2 Adding Redux to Timesheetz
